// Generated by view binder compiler. Do not edit!
package com.example.myfirstapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myfirstapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CartItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView cartQuantity;

  @NonNull
  public final TextView cartUnitprice;

  @NonNull
  public final TextView cartproductName;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView23;

  private CartItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView cartQuantity,
      @NonNull TextView cartUnitprice, @NonNull TextView cartproductName,
      @NonNull TextView textView15, @NonNull TextView textView23) {
    this.rootView = rootView;
    this.cartQuantity = cartQuantity;
    this.cartUnitprice = cartUnitprice;
    this.cartproductName = cartproductName;
    this.textView15 = textView15;
    this.textView23 = textView23;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CartItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CartItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cart_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CartItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cart_quantity;
      TextView cartQuantity = ViewBindings.findChildViewById(rootView, id);
      if (cartQuantity == null) {
        break missingId;
      }

      id = R.id.cart_unitprice;
      TextView cartUnitprice = ViewBindings.findChildViewById(rootView, id);
      if (cartUnitprice == null) {
        break missingId;
      }

      id = R.id.cartproduct_name;
      TextView cartproductName = ViewBindings.findChildViewById(rootView, id);
      if (cartproductName == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      return new CartItemBinding((ConstraintLayout) rootView, cartQuantity, cartUnitprice,
          cartproductName, textView15, textView23);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
